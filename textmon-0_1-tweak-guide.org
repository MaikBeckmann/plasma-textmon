#+Title: Hack your TextMon(-0.1)
#+Author: Maik Beckmann &lt;beckmann.maik@googlemail.com&gt;
#+Language: en
#+Style: <link rel="stylesheet" type="text/css" href="org-mode.css"/>

[[file:index.html][{Back to index}]]

* Introcdution
A number of examples on how to alter TextMon-0.1 are presented.  I'll assume
you know what is explained in the [[file:prelude.html][prelude]].

* Changing the font
The CSS stylesheet that defines the font appearance is located in line 10
to 13.  If
#+begin_src js
  // Font properties
  var styleSheet = { "font-family": "Liberation Mono",
                     "font-style": "normal",
                     "font-size": "10px",
                     "color": "white" };
#+end_src
is changed to use the default monospace font and a bigger font size
#+begin_src js
  // Font properties
  var styleSheet = { "font-family": "Monospace",
                     "font-style": "normal",
                     "font-size": "24px",
                     "color": "white" };
#+end_src
we get
#+caption: Bigger font
[[file:images/textmon-0.1/bigger_font.png]]

* Changing value decoration
The code that arranges the labels is at the lines 141-146
#+begin_src js
  for(var i in labelNames) {
    var name = labelNames[i]
    layout.addItem(separator("{" + name + ":"));
    layout.addItem(labels[name]);
    layout.addItem(separator("}"));
  }
#+end_src
If we change remove the device name
#+begin_src js
  for(var i in labelNames) {
    var name = labelNames[i]
    layout.addItem(separator("{"));
    layout.addItem(labels[name]);
    layout.addItem(separator("}"));
  }
#+end_src
we'll get
#+caption: Without device names
[[file:images/textmon-0.1/without_device_names.png]]
Or you do something entirely different
#+begin_src js
  layout.addItem(labels.cpu);
  layout.addItem(separator("{"));
  layout.addItem(labels.mem);
  layout.addItem(separator("}("));
  layout.addItem(labels.wlan);
  layout.addItem(separator(")["));
  layout.addItem(labels.sda);
  layout.addItem(separator("]"));
#+end_src
#+caption: Random decoration
[[file:images/textmon-0.1/random_decoration.png]]

* Removing cpu entry
This doesn't make much sense, but I want you to know how to do it anyways.

The steps to remove either /cpu/ or /mem/ are analogous.  We will show how it's
done for /cpu/ here.

Comment out or remove line 21:
#+begin_src js
  var sourceNames = (function () {
    var ret = {}

    // ret["cpu"] = "cpu/system/TotalLoad";
    ret["mem"] = "mem/physical/application";
    ...
#+end_src

Remove "cpu" from line 35:
#+begin_src js
  var labelNames = ["mem", "wlan", "sda"];
#+end_src

Comment out or remove line 41:
#+begin_src js
var sourceLabelMap = (function () {
  var ret = {};
  //ret[sourceNames.cpu] = "cpu";
  ret[sourceNames.mem] = "mem";
#+end_src

Comment out or remove line 70-74
#+begin_src js
  var formatters = {

    // "cpu": function (data) {
    //   var value = helpers.checkedValueStr(data["value"], '0');
    //   var paddedValue = helpers.padStrLeft(value, ' ', 3);
    //   return  paddedValue + data["units"];
    // },

  "mem": function(data) {
#+end_src

Comment out or remove line 164-169:
#+begin_src js
  var updateLabels = function (labels, name, sourceData) {
      ...
      // // cpu
      // if (label === "cpu") {
      //   var formatter = formatters[label];
      //   labels[label].text = formatter({ value: parseInt(sourceData["value"]),
      //                                     units: sourceData["units"] });
      // }
      //
      // else
      // mem
      if (label === "mem") {
#+end_src

The sad result
#+caption: Without cpu :(
[[file:images/textmon-0.1/without_cpu.png]]

* Removing  wlan entry
The steps to remove either /sda/ or /wlan/ are analogous.  We will show how
it's done for /wlan/ here.

Comment out or remove line 23-24
#+begin_src js
  var sourceNames = (function () {
    var ret = {}

    ret["cpu"] = "cpu/system/TotalLoad";
    ret["mem"] = "mem/physical/application";
    // ret["wlanDown"] = "network/interfaces/wlan0/receiver/data";
    // ret["wlanUp"] = "network/interfaces/wlan0/transmitter/data";
#+end_src

Remove "wlan" from line 35
#+begin_src js
  var labelNames = ["cpu", "mem", "sda"];
#+end_src

Comment out or remove line 43-44
#+begin_src js
var sourceLabelMap = (function () {
  var ret = {};
  ret[sourceNames.cpu] = "cpu";
  ret[sourceNames.mem] = "mem";
  // ret[sourceNames.wlanDown] = "wlan";
  // ret[sourceNames.wlanUp] = "wlan";
#+end_src

Comment out or remove line 54-57
#+begin_src js
  var dataCache = {
    // "wlan" : {
    //   up:   {value: "----", units: "KB/s"},
    //   down: {value: "----", units: "KB/s"}
    // },

    "sda" : {
#+end_src

Comment out or remove line 82-95
#+begin_src js
  var formatters = {
    ...
    // "wlan": function (downData, upData) {
    //   var ret;

    //   var value = helpers.checkedValueStr(downData["value"], '0');
    //   var paddedValue = helpers.padStrLeft(value, ' ', 4);
    //   ret = paddedValue + downData["units"] + " d";

    //   ret += "|";

    //   var value = helpers.checkedValueStr(upData["value"], '0');
    //   var paddedValue = helpers.padStrLeft(value, ' ', 4);
    //   ret += paddedValue + upData["units"] + " u";
    //   return ret;
    // },

    "sda": function (readData, writeData) {
#+end_src

Comment out or remove line 192-207
#+begin_src js
  var updateLabels = function (labels, name, sourceData) {
    ...
      labels[label].text = formatter(data["read"], data["write"]);
    }
    // // wlan
    // else if (label === "wlan") {
    //   var data = dataCache[label];
    //   if (name === sourceNames.wlanDown) {
    //     data["down"] = { value: sourceData["value"],
    //                      units: sourceData["units"] };
    //   }
    //   else if (name === sourceNames.wlanUp) {
    //     data["up"] = { value: sourceData["value"],
    //                    units: sourceData["units"] };
    //   }
    //   dataCache[label] = data;

    //   var formatter = formatters[label];
    //   labels[label].text = formatter(data["down"], data["up"]);
    // }
  };
#+end_src

The result
#+caption: Without wlan
[[file:images/textmon-0.1/without_wlan.png]]

* Monitoring eth0 instead of wlan0
Your system may have a different device names for /wlan/ (i.e. =ath0=) or you
want to minitor your LAN (=eth0=) throughput instead.

Though it isn't strictly necessary, I recommend reading on [[file:dataengines.html][plasma data engines]]
before you continue.  Because
 - it's interesting
 - you'll know what to do when something goes wrong here

The location in =main.js= to change the monitored devices is line 21-28
#+begin_src js
  // systemmonitor sources we're subscribing to.  Found via
  //   : $ plasmaengineexplorer
  var sourceNames = (function () {
    var ret = {}

    ret["cpu"] = "cpu/system/TotalLoad";
    ret["mem"] = "mem/physical/application";
    ret["wlanDown"] = "network/interfaces/wlan0/receiver/data";
    ret["wlanUp"] = "network/interfaces/wlan0/transmitter/data";
    //
    var sdaBase = "disk/sda_(8:0)/Rate";
    ret["sdaRead"] = sdaBase + "/rblk";
    ret["sdaWrite"] = sdaBase + "/wblk";

    return ret;
  })();
#+end_src

Just as the comment suggest, use /plasmaengineexplorer/ to figure out the
proper identifiers.  For the down rate of the =eth0= device this is
#+caption: eth0
[[file:images/textmon-0.1/engine_explorer_eth0.png]]

After the source names are changed
#+begin_src js
  var sourceNames = (function () {
    ...
    ret["lanDown"] = "network/interfaces/eth0/receiver/data";
    ret["lan0Up"] = "network/interfaces/eth0/transmitter/data";
    //
    var sdaBase = "disk/sda_(8:0)/Rate";
    ...
#+end_src
you simply replace ~wlan" with "lan" in
 - =sourceLabelMap=
 - =dataCache=
 - =formatters=
 - =updateLabels=
#+caption: lan instead of wlan
[[file:images/textmon-0.1/lan_instead_wlan.png]]

* COMMENT Adding a new source                                          :todo:
nil

* Two applets with different settings
Next you'll see why the plasma configuration facility makes a lot of sense,
because we won't use it :P

To have two textmon applets with different configurations, we actually have to
create an new applet from the existing one.

Lets say we want a flavor for the desktop rather than a panel where the font is
bigger.  Do
 : % cp $(kde4-config --localprefix)/share/apps/plasma/plasmoids/textmon ~/textmon_desktop -r
 : cd ~/textmon_desktop
The path =~/textmon_desktop= is arbitrary, copy it whatever you want to.  Edit
the name of the applet in =metadata.desktop=
#+begin_src conf
  [Desktop Entry]
  ...
  Name=TextMon desktop
  ...
  X-KDE-PluginInfo-Name=textmon-desktop
  ...
#+end_src
Do your changes in =main.js=, test them with /plasmoidviewer/ and install the
applet
 : % plasmapkg -i .

This isn't too bad, but you can clearly see why a per applet instance
configuration makes a lot of sense.
